;; Object field/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "field/"
  :tables (list 
   (semanticdb-table "field.cpp"
    :major-mode 'c++-mode
    :tags 
        '( ("field.hpp" include nil nil [205 225])
            ("cppVerifier" using (:type ("cppVerifier" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [228 256])
            ("cppVerifier::arithm" using (:type ("cppVerifier::arithm" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [257 293])
            ("Field" function
               (:constructor-flag t
                :parent "Field"
                :arguments 
                  ( ("aOrder" variable (:type ("mpz_class" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [309 326]))                  
                :type ("Field" type (:type "class") nil nil))
                nil [296 373])
            ("Field" function
               (:constructor-flag t
                :parent "Field"
                :arguments 
                  ( ("aOrder" variable (:type ("mpz_class" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [389 406])
                    ("mOrder" variable (:type ("mpz_class" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [407 424])
                    ("gen" variable
                       (:pointer 1
                        :type ("Elmt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [425 436]))                  
                :type ("Field" type (:type "class") nil nil))
                nil [376 495])
            ("add" function
               (:pointer 1
                :parent "Field"
                :arguments 
                  ( ("e1" variable
                       (:pointer 1
                        :type ("Elmt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [593 603])
                    ("e2" variable
                       (:pointer 1
                        :type ("Elmt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [604 614]))                  
                :type ("Elmt" type (:type "class") nil nil))
                nil [575 639])
            ("addInverse" function
               (:pointer 1
                :parent "Field"
                :arguments 
                  ( ("e" variable
                       (:pointer 1
                        :type ("Elmt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [667 676]))                  
                :type ("Elmt" type (:type "class") nil nil))
                nil [642 701])
            ("soust" function
               (:pointer 1
                :parent "Field"
                :arguments 
                  ( ("e1" variable
                       (:pointer 1
                        :type ("Elmt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [724 734])
                    ("e2" variable
                       (:pointer 1
                        :type ("Elmt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [735 745]))                  
                :type ("Elmt" type (:type "class") nil nil))
                nil [704 789])
            ("add" function
               (:parent "Field"
                :arguments 
                  ( ("e1" variable (:type ("CollectionOfElmts" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [898 919])
                    ("e2" variable (:type ("CollectionOfElmts" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [920 941]))                  
                :type ("CollectionOfElmts" type (:type "class") nil nil))
                nil [869 1419])
            ("addInverse" function
               (:parent "Field"
                :arguments 
                  ( ("a" variable (:type ("CollectionOfElmts" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1458 1478]))                  
                :type ("CollectionOfElmts" type (:type "class") nil nil))
                nil [1422 1637])
            ("soust" function
               (:parent "Field"
                :arguments 
                  ( ("e1" variable (:type ("CollectionOfElmts" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1671 1692])
                    ("e2" variable (:type ("CollectionOfElmts" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1693 1714]))                  
                :type ("CollectionOfElmts" type (:type "class") nil nil))
                nil [1640 2194])
            ("sum" function
               (:pointer 1
                :parent "Field"
                :arguments 
                  ( ("a" variable (:type ("CollectionOfElmts" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2215 2235]))                  
                :type ("Elmt" type (:type "class") nil nil))
                nil [2197 2389])
            ("getZero" function
               (:pointer 1
                :parent "Field"
                :type ("Elmt" type (:type "class") nil nil))
                nil [2465 2513])
            ("getZero" function
               (:parent "Field"
                :arguments 
                  ( ("n" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [2549 2564]))                  
                :type ("CollectionOfElmts" type (:type "class") nil nil))
                nil [2516 2709])
            ("getAddOrder" function
               (:parent "Field"
                :type ("mpz_class" type (:type "class") nil nil))
                nil [2783 2842])
            ("getType" function
               (:parent "Field"
                :type ("std::string" type (:type "class") nil nil))
                nil [2845 2901]))          
    :file "field.cpp"
    :pointmax 2902
    :fsize 2902
    :lastmodtime '(20657 17476)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "field.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("_FIELD_H_" variable (:constant-flag t) nil [235 244])
            ("_FIELD_H_" variable (:constant-flag t) nil [235 244])
            ("_FIELD_H_" variable (:constant-flag t) nil [235 244])
            ("gmp.h" include (:system-flag t) nil [246 262])
            ("gmpxx.h" include (:system-flag t) nil [263 281])
            ("../group/group.hpp" include nil nil [283 312])
            ("cppVerifier" type
               (:members 
                  ( ("arithm" type
                       (:members 
                          ( ("Field" type
                               (:superclasses 
                                  ( ("Group" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("protected" label nil (reparse-symbol classsubparts) [665 675])
                                    ("addOrder" variable (:type ("mpz_class" type (:type "class") nil nil)) (reparse-symbol classsubparts) [776 795])
                                    ("public" label nil (reparse-symbol classsubparts) [797 804])
                                    ("Field" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("aOrder" variable (:type ("mpz_class" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [996 1013]))                                          
                                        :type ("Field" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [990 1014])
                                    ("Field" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("aOrder" variable (:type ("mpz_class" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1171 1188])
                                            ("mOrder" variable (:type ("mpz_class" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1189 1206])
                                            ("gen" variable
                                               (:pointer 1
                                                :type ("Elmt" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1207 1218]))                                          
                                        :type ("Field" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1165 1219])
                                    ("add" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :typemodifiers ("virtual")
                                        :arguments 
                                          ( ("e1" variable
                                               (:pointer 1
                                                :type ("Elmt" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1378 1388])
                                            ("e2" variable
                                               (:pointer 1
                                                :type ("Elmt" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1389 1399]))                                          
                                        :type ("Elmt" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1359 1400])
                                    ("addInverse" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :typemodifiers ("virtual")
                                        :arguments 
                                          ( ("e" variable
                                               (:pointer 1
                                                :type ("Elmt" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1497 1506]))                                          
                                        :type ("Elmt" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1471 1507])
                                    ("soust" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :typemodifiers ("virtual")
                                        :arguments 
                                          ( ("e1" variable
                                               (:pointer 1
                                                :type ("Elmt" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1605 1615])
                                            ("e2" variable
                                               (:pointer 1
                                                :type ("Elmt" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1616 1626]))                                          
                                        :type ("Elmt" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1584 1627])
                                    ("add" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("e1" variable (:type ("CollectionOfElmts" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1880 1901])
                                            ("e2" variable (:type ("CollectionOfElmts" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1902 1923]))                                          
                                        :type ("CollectionOfElmts" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1858 1924])
                                    ("addInverse" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("a" variable (:type ("CollectionOfElmts" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2106 2126]))                                          
                                        :type ("CollectionOfElmts" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2077 2127])
                                    ("soust" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("e1" variable (:type ("CollectionOfElmts" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2306 2327])
                                            ("e2" variable (:type ("CollectionOfElmts" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2328 2349]))                                          
                                        :type ("CollectionOfElmts" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2282 2350])
                                    ("sum" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :arguments 
                                          ( ("a" variable (:type ("CollectionOfElmts" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2481 2501]))                                          
                                        :type ("Elmt" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2470 2502])
                                    ("getZero" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :typemodifiers ("virtual")
                                        :type ("Elmt" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2671 2696])
                                    ("getZero" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("n" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [2878 2893]))                                          
                                        :type ("CollectionOfElmts" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2852 2894])
                                    ("getAddOrder" function
                                       (:prototype-flag t
                                        :type ("mpz_class" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3051 3075])
                                    ("getType" function
                                       (:prototype-flag t
                                        :typemodifiers ("virtual")
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3085 3115]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [636 3136]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [338 3140]))                  
                :type "namespace")
                nil [314 3142]))          
    :file "field.hpp"
    :pointmax 3172
    :fsize 3172
    :lastmodtime '(20657 17096)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("_FIELD_H_")
          )

    )
   (semanticdb-table "modfield.cpp"
    :major-mode 'c++-mode
    :tags 
        '( ("modfield.hpp" include nil nil [210 233])
            ("cppVerifier" using (:type ("cppVerifier" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [235 263])
            ("cppVerifier::arithm" using (:type ("cppVerifier::arithm" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [264 300])
            ("ModField" function
               (:constructor-flag t
                :parent "ModField"
                :arguments 
                  ( ("aOrder" variable (:type ("mpz_class" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [322 339]))                  
                :type ("ModField" type (:type "class") nil nil))
                nil [303 610])
            ("getElmt" function
               (:pointer 1
                :parent "ModField"
                :arguments 
                  ( ("bt" variable
                       (:pointer 1
                        :type ("utils::ByteTree" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [713 734]))                  
                :type ("Elmt" type (:type "class") nil nil))
                nil [688 1070])
            ("getByteTree" function
               (:pointer 1
                :parent "ModField"
                :arguments 
                  ( ("e" variable
                       (:pointer 1
                        :type ("Elmt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1113 1122]))                  
                :type ("utils::ByteTree" type (:type "class") nil nil))
                nil [1073 1183])
            ("mult" function
               (:pointer 1
                :parent "ModField"
                :arguments 
                  ( ("e1" variable
                       (:pointer 1
                        :type ("Elmt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1281 1291])
                    ("e2" variable
                       (:pointer 1
                        :type ("Elmt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1292 1302]))                  
                :type ("Elmt" type (:type "class") nil nil))
                nil [1259 1384])
            ("multInverse" function
               (:pointer 1
                :parent "ModField"
                :arguments 
                  ( ("e" variable
                       (:pointer 1
                        :type ("Elmt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1416 1425]))                  
                :type ("Elmt" type (:type "class") nil nil))
                nil [1387 1640])
            ("exp" function
               (:pointer 1
                :parent "ModField"
                :arguments 
                  ( ("e" variable
                       (:pointer 1
                        :type ("Elmt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1664 1673])
                    ("s" variable
                       (:pointer 1
                        :type ("Elmt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1674 1683]))                  
                :type ("Elmt" type (:type "class") nil nil))
                nil [1643 1924])
            ("add" function
               (:pointer 1
                :parent "ModField"
                :arguments 
                  ( ("e1" variable
                       (:pointer 1
                        :type ("Elmt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1948 1958])
                    ("e2" variable
                       (:pointer 1
                        :type ("Elmt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1959 1969]))                  
                :type ("Elmt" type (:type "class") nil nil))
                nil [1927 2051])
            ("addInverse" function
               (:pointer 1
                :parent "ModField"
                :arguments 
                  ( ("e" variable
                       (:pointer 1
                        :type ("Elmt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2082 2091]))                  
                :type ("Elmt" type (:type "class") nil nil))
                nil [2054 2153])
            ("compare" function
               (:parent "ModField"
                :arguments 
                  ( ("e1" variable
                       (:pointer 1
                        :type ("Elmt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2179 2189])
                    ("e2" variable
                       (:pointer 1
                        :type ("Elmt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2190 2200]))                  
                :type "bool")
                nil [2156 2255])
            ("getZero" function
               (:pointer 1
                :parent "ModField"
                :type ("Elmt" type (:type "class") nil nil))
                nil [2332 2397])
            ("getOne" function
               (:pointer 1
                :parent "ModField"
                :type ("Elmt" type (:type "class") nil nil))
                nil [2400 2464])
            ("getType" function
               (:parent "ModField"
                :type ("std::string" type (:type "class") nil nil))
                nil [2540 2602]))          
    :file "modfield.cpp"
    :pointmax 2603
    :fsize 2603
    :lastmodtime '(20657 14378)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "modfield.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("_MODFIELD_H_" variable (:constant-flag t) nil [238 250])
            ("_MODFIELD_H_" variable (:constant-flag t) nil [238 250])
            ("_MODFIELD_H_" variable (:constant-flag t) nil [238 250])
            ("field.hpp" include nil nil [252 272])
            ("cppVerifier" type
               (:members 
                  ( ("arithm" type
                       (:members 
                          ( ("ModField" type
                               (:superclasses 
                                  ( ("Field" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("private" label nil (reparse-symbol classsubparts) [440 448])
                                    ("leafSize" variable (:type "unsigned int") (reparse-symbol classsubparts) [591 613])
                                    ("public" label nil (reparse-symbol classsubparts) [615 622])
                                    ("ModField" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("aOrder" variable (:type ("mpz_class" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [824 841]))                                          
                                        :type ("ModField" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [815 842])
                                    ("getElmt" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :arguments 
                                          ( ("bt" variable
                                               (:pointer 1
                                                :type ("utils::ByteTree" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [897 918]))                                          
                                        :type ("Elmt" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [882 919])
                                    ("getByteTree" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :arguments 
                                          ( ("e" variable
                                               (:pointer 1
                                                :type ("Elmt" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [966 975]))                                          
                                        :type ("utils::ByteTree" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [936 976])
                                    ("mult" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :arguments 
                                          ( ("e1" variable
                                               (:pointer 1
                                                :type ("Elmt" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1020 1030])
                                            ("e2" variable
                                               (:pointer 1
                                                :type ("Elmt" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1031 1041]))                                          
                                        :type ("Elmt" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1008 1042])
                                    ("multInverse" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :arguments 
                                          ( ("e" variable
                                               (:pointer 1
                                                :type ("Elmt" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1070 1079]))                                          
                                        :type ("Elmt" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1051 1080])
                                    ("exp" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :arguments 
                                          ( ("e" variable
                                               (:pointer 1
                                                :type ("Elmt" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1100 1109])
                                            ("s" variable
                                               (:pointer 1
                                                :type ("Elmt" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1110 1119]))                                          
                                        :type ("Elmt" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1089 1120])
                                    ("add" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :arguments 
                                          ( ("e1" variable
                                               (:pointer 1
                                                :type ("Elmt" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1140 1150])
                                            ("e2" variable
                                               (:pointer 1
                                                :type ("Elmt" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1151 1161]))                                          
                                        :type ("Elmt" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1129 1162])
                                    ("addInverse" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :arguments 
                                          ( ("e" variable
                                               (:pointer 1
                                                :type ("Elmt" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1189 1198]))                                          
                                        :type ("Elmt" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1171 1199])
                                    ("compare" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("e1" variable
                                               (:pointer 1
                                                :type ("Elmt" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1221 1231])
                                            ("e2" variable
                                               (:pointer 1
                                                :type ("Elmt" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1232 1242]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [1208 1243])
                                    ("getZero" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :type ("Elmt" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1273 1290])
                                    ("getOne" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :type ("Elmt" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1299 1315])
                                    ("getType" function
                                       (:prototype-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1357 1379]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [408 1382]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [298 1385]))                  
                :type "namespace")
                nil [274 1387]))          
    :file "modfield.hpp"
    :pointmax 1419
    :fsize 1419
    :lastmodtime '(20657 14393)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("_MODFIELD_H_")
          )

    )
   )
  :file "!media!aa341e43-5375-473d-8ef7-21ba586c74a4!projets!Code!verificatum!src!arithm!field!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.0"
  )
